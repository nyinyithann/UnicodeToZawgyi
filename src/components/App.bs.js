// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as React$1 from "@headlessui/react";
import * as Util$UnicodeToZawgyi from "../Util.bs.js";
import * as Icons$UnicodeToZawgyi from "./Icons.bs.js";
import * as Rabbit$UnicodeToZawgyi from "../Rabbit.bs.js";
import * as TextArea$UnicodeToZawgyi from "./TextArea.bs.js";

function string(prim) {
  return prim;
}

function useState(prim) {
  return React.useState(function () {
              return Curry._1(prim, undefined);
            });
}

var unicodeSampleText = "༺ လယ်တီဆရာတော်ဘုရားကြီးရေးသားတော်မူသော ༻\n\n  ☸ နိဗ္ဗိန္နတေးထပ် ☸\n ༺༻༺༻༺༻\nအဝိဇ္ဇာ ပိတ်ကာဆို့၊\nမိစ္ဆာမြို့ပြင်ပြင်၊\nဣဋ္ဌာလို့ ခင်မင်လျှင်၊\nလွင့်စင်မည်မလွဲ၊\nအရွတ်စု အပုတ်ကောင်ကို၊\nအဟုတ်ယောင် မှားဖို့ ဖန်နဲ။\n\nအသုဘ ရုပ်တစ္ဆေငယ်၊\nမဟုတ်လေ ကိုယ်ထဲ၊\nအပုပ်ရေ စိုတရွှဲဟာမို့၊\nယိုမစဲ သူ့မှာ၊\nသွေးသည်းချေ ပြည် သလိပ်တွေက၊\nတည်မဆိတ် လျှမ်းပြည့်သည်သာ၊\n\nသို့ကလောက် ရွံစရာကို၊\nလွန်တဏှာ မက်စွဲပါလို့၊\nစက်ဝဲမှာတပေပေ၊\nမွန်းကြပလေ၊\nတဏှာဖမ်းတဲ့ အကန်းတွေမှာ၊\nအပန်းမပြေ ဟိုက်မောရှာကြလေး။\nတဏှာပူးတဲ့ အရူးတွေမှာ\nအမူးမပြေ မိုက်မောရှာကြလေး။\nတဏှာလိုက်တဲ့ အမိုက်တွေမှာ၊\nအဟိုက်မပြေ ပင်ပန်းရှာကြလေး။";

var unicodeFontName = "\"Noto Sans Myanmar\",\"Pyidaungsu\"";

var zawgyiFontName = "Noto Sans Zawgyi";

var mobileHeight = "calc(100vh - 7.2em)";

function getLgLabelaClass(selected) {
  return (
            selected ? "border-primary_200 text-primary_200" : "border-primary_500 text-primary_500"
          ).concat(" font-bold border-b-2 pb-1  inline self-start px-2 focus:outline-none");
}

function getTabLabelClass(selected) {
  return (
            selected ? "border-primary_200 text-primary_200" : "border-transparent text-primary_500 hover:text-primary_400 hover:border-primary_500"
          ).concat(" whitespace-nowrap py-2 px-1 border-b-2 font-bold");
}

function App(Props) {
  var match = React.useState(function () {
        return "theme-gray";
      });
  var setTheme = match[1];
  var match$1 = React.useState(function () {
        return unicodeSampleText;
      });
  var setUnicodeText = match$1[1];
  var unicodeText = match$1[0];
  var match$2 = React.useState(function () {
        return Rabbit$UnicodeToZawgyi.uni2zg(unicodeSampleText);
      });
  var setZawgyiText = match$2[1];
  var zawgyiText = match$2[0];
  var match$3 = React.useState(function () {
        return "Unicode";
      });
  var setSelectedTab = match$3[1];
  var selectedTab = match$3[0];
  var match$4 = React.useState(function () {
        return "Unicode";
      });
  var setFocusedLgTextArea = match$4[1];
  var focusedLgTextArea = match$4[0];
  var handleUnicodeTextChange = function (e) {
    var newValue = e.target.value;
    Curry._1(setUnicodeText, (function (param) {
            return newValue;
          }));
    return Curry._1(setZawgyiText, (function (param) {
                  return Rabbit$UnicodeToZawgyi.uni2zg(newValue);
                }));
  };
  var handleZawgyiTextChange = function (e) {
    var newValue = e.target.value;
    Curry._1(setZawgyiText, (function (param) {
            return newValue;
          }));
    return Curry._1(setUnicodeText, (function (param) {
                  return Rabbit$UnicodeToZawgyi.zg2uni(newValue);
                }));
  };
  var deleteText = function (param) {
    Curry._1(setUnicodeText, (function (param) {
            return " ";
          }));
    Curry._1(setZawgyiText, (function (param) {
            return " ";
          }));
    
  };
  var copyUnicodeText = function (e) {
    e.preventDefault();
    return Util$UnicodeToZawgyi.copy(unicodeText);
  };
  var copyZawgyiText = function (e) {
    e.preventDefault();
    Util$UnicodeToZawgyi.copy(zawgyiText);
    
  };
  var copyBothText = function (e) {
    e.preventDefault();
    Util$UnicodeToZawgyi.copy(unicodeText + "\n\r" + zawgyiText);
    
  };
  var menu = function (kind) {
    var match = kind === "mb" ? [
        "flex flex-col origin-top-right absolute mt-4 w-40 p-1 bg-primary_600 rounded divide-y divide-primary_200 focus:outline-none right-11 top-12",
        "flex flex-col origin-top-right absolute mt-4 w-40 p-1 bg-primary_600 rounded divide-y divide-primary_200 focus:outline-none right-8 top-12"
      ] : [
        "flex flex-col origin-top-right absolute mt-4 w-40 p-1 bg-primary_600 rounded divide-y divide-primary_200 focus:outline-none right-4 top-6",
        "flex flex-col origin-top-right absolute mt-4 w-40 p-1 bg-primary_600 rounded divide-y divide-primary_200 focus:outline-none right-1 top-6"
      ];
    var colorClassName = match[1];
    var copyClassName = match[0];
    return React.createElement("div", {
                className: "flex flex-row space-x-2 flex-1 justify-end"
              }, React.createElement(Icons$UnicodeToZawgyi.Trash.make, {
                    className: "mobile-icon",
                    onClick: deleteText
                  }), React.createElement(React$1.Menu, {
                    as_: "div",
                    children: (function (param) {
                        return React.createElement(React.Fragment, undefined, React.createElement(React$1.Menu.Button, {
                                        children: React.createElement(Icons$UnicodeToZawgyi.Copy.make, {
                                              onClick: (function (e) {
                                                  e.preventDefault();
                                                  
                                                })
                                            }),
                                        className: "mobile-icon"
                                      }), React.createElement(React$1.Menu.Items, {
                                        as_: "div",
                                        children: null,
                                        className: copyClassName,
                                        static: param.open
                                      }, React.createElement(React$1.Menu.Item, {
                                            children: (function (param) {
                                                return React.createElement("a", {
                                                            className: "copy-menu-item",
                                                            href: "",
                                                            onClick: copyUnicodeText
                                                          }, "Copy Unicode");
                                              })
                                          }), React.createElement(React$1.Menu.Item, {
                                            children: (function (param) {
                                                return React.createElement("a", {
                                                            className: "copy-menu-item",
                                                            href: "",
                                                            onClick: copyZawgyiText
                                                          }, "Copy Zawgyi");
                                              })
                                          }), React.createElement(React$1.Menu.Item, {
                                            children: (function (param) {
                                                return React.createElement("a", {
                                                            className: "copy-menu-item",
                                                            href: "",
                                                            onClick: copyBothText
                                                          }, "Copy Both");
                                              })
                                          })));
                      }),
                    className: "relative inline-block text-left"
                  }), React.createElement(React$1.Menu, {
                    as_: "div",
                    children: (function (param) {
                        return React.createElement(React.Fragment, undefined, React.createElement(React$1.Menu.Button, {
                                        children: React.createElement(Icons$UnicodeToZawgyi.Settings.make, {
                                              onClick: (function (e) {
                                                  e.preventDefault();
                                                  console.log("test");
                                                  
                                                })
                                            }),
                                        className: "mobile-icon"
                                      }), React.createElement(React$1.Menu.Items, {
                                        as_: "div",
                                        children: React.createElement(React$1.Menu.Item, {
                                              children: (function (param) {
                                                  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                                                  className: "flex flex-col"
                                                                }, React.createElement("div", {
                                                                      className: "theme-menu-internal-div"
                                                                    }, React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#6B7280"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-gray";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#EF4444"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-red";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#3B82F6"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-blue";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#F59E0B"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-yellow";
                                                                                          }));
                                                                            })
                                                                        })), React.createElement("div", {
                                                                      className: "theme-menu-internal-div"
                                                                    }, React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#10B981"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-green";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#6366F1"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-indigo";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#8B5CF6"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-purple";
                                                                                          }));
                                                                            })
                                                                        }), React.createElement("button", {
                                                                          className: "theme-btn",
                                                                          style: {
                                                                            background: "#EC4899"
                                                                          },
                                                                          type: "button",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(setTheme, (function (param) {
                                                                                            return "theme-pink";
                                                                                          }));
                                                                            })
                                                                        }))));
                                                })
                                            }),
                                        className: colorClassName,
                                        static: param.open
                                      }));
                      }),
                    className: "relative inline-block text-left"
                  }));
  };
  return React.createElement("div", {
              className: "" + match[0] + " h-screen"
            }, React.createElement("div", {
                  className: "hidden 2xl:flex flex-row space-x-5 p-6 bg-primary_700 justify-between",
                  id: "lg-screen",
                  style: {
                    height: "calc(100vh - 1.5em)"
                  }
                }, React.createElement("div", {
                      className: "flex flex-col flex-1 space-y-4 self-stretch"
                    }, React.createElement("div", {
                          className: "flex flex-row relative"
                        }, React.createElement("span", {
                              className: getLgLabelaClass(focusedLgTextArea === "Unicode")
                            }, "Unicode"), menu("lg")), React.createElement(TextArea$UnicodeToZawgyi.make, {
                          fontFamily: unicodeFontName,
                          value: unicodeText,
                          show: true,
                          onFocus: (function (e) {
                              return Curry._1(setFocusedLgTextArea, (function (param) {
                                            return "Unicode";
                                          }));
                            }),
                          onChange: handleUnicodeTextChange
                        })), React.createElement("div", {
                      className: "flex flex-col flex-1 space-y-4 self-stretch"
                    }, React.createElement("div", {
                          className: "flex flex-row relative"
                        }, React.createElement("span", {
                              className: getLgLabelaClass(focusedLgTextArea === "Zawgyi")
                            }, "Zawgyi"), menu("lg")), React.createElement(TextArea$UnicodeToZawgyi.make, {
                          fontFamily: zawgyiFontName,
                          value: zawgyiText,
                          show: true,
                          onFocus: (function (e) {
                              return Curry._1(setFocusedLgTextArea, (function (param) {
                                            return "Zawgyi";
                                          }));
                            }),
                          onChange: handleZawgyiTextChange
                        }))), React.createElement("div", {
                  className: "2xl:hidden flex flex-col p-4 bg-primary_700",
                  id: "non-lg-screen"
                }, React.createElement("div", {
                      className: "flex flex-row space-x-4"
                    }, React.createElement("a", {
                          className: getTabLabelClass(selectedTab === "Unicode"),
                          href: "#",
                          onClick: (function (param) {
                              return Curry._1(setSelectedTab, (function (param) {
                                            return "Unicode";
                                          }));
                            })
                        }, "Unicode"), React.createElement("a", {
                          className: getTabLabelClass(selectedTab === "Zawgyi"),
                          href: "#",
                          onClick: (function (param) {
                              return Curry._1(setSelectedTab, (function (param) {
                                            return "Zawgyi";
                                          }));
                            })
                        }, "Zawgyi"), menu("mb")), React.createElement("div", {
                      className: "pt-4"
                    }, React.createElement(TextArea$UnicodeToZawgyi.make, {
                          fontFamily: unicodeFontName,
                          value: unicodeText,
                          height: mobileHeight,
                          show: selectedTab === "Unicode",
                          onChange: handleUnicodeTextChange
                        }), React.createElement(TextArea$UnicodeToZawgyi.make, {
                          fontFamily: zawgyiFontName,
                          value: zawgyiText,
                          height: mobileHeight,
                          show: selectedTab === "Zawgyi",
                          onChange: handleZawgyiTextChange
                        }))), React.createElement("footer", {
                  className: "flex flex-row justify-between px-4 2xl:px-10 bg-primary_800 text-primary_400"
                }, React.createElement("div", {
                      className: "flex-1 self-start"
                    }, React.createElement("a", {
                          className: "text-primary_200 underline",
                          href: "https://github.com/nyinyithann/UnicodeToZawgyi",
                          target: "_blank"
                        }, "GitHub Repo")), React.createElement("div", {
                      className: "flex-1 self-end flex justify-end"
                    }, React.createElement("span", undefined, "Credit: ", React.createElement("a", {
                              className: "text-primary_200 underline",
                              href: "https://github.com/Rabbit-Converter/Rabbit",
                              target: "_blank"
                            }, "Rabbit")))));
}

var initialSelectedTab = "Unicode";

var make = App;

export {
  string ,
  useState ,
  unicodeSampleText ,
  unicodeFontName ,
  zawgyiFontName ,
  mobileHeight ,
  initialSelectedTab ,
  getLgLabelaClass ,
  getTabLabelClass ,
  make ,
  
}
/* react Not a pure module */
